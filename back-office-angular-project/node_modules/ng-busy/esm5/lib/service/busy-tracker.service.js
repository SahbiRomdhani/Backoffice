/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { EventEmitter, Injectable } from '@angular/core';
import { from, timer } from 'rxjs';
import { isPromise } from '../util/isPromise';
import * as i0 from "@angular/core";
/**
 * @record
 */
export function TrackerOptions() { }
/** @type {?} */
TrackerOptions.prototype.minDuration;
/** @type {?} */
TrackerOptions.prototype.delay;
/** @type {?} */
TrackerOptions.prototype.busyList;
var BusyTrackerService = /** @class */ (function () {
    function BusyTrackerService() {
        this.isDelayProcessing = false;
        this.isDurationProcessing = false;
        this.isBusiesProcessing = false;
        this.busyQueue = [];
        this.__isActive = false;
        this.onStartBusy = new EventEmitter();
        this.onStopBusy = new EventEmitter();
    }
    Object.defineProperty(BusyTrackerService.prototype, "isActive", {
        get: /**
         * @return {?}
         */
        function () {
            return this.__isActive;
        },
        set: /**
         * @param {?} val
         * @return {?}
         */
        function (val) {
            if (this.__isActive === false && val === true && this.onStartBusy) {
                this.onStartBusy.emit();
            }
            if (this.__isActive === true && val === false && this.onStopBusy) {
                this.isBusiesProcessing = false;
                this.onStopBusy.emit();
            }
            this.__isActive = val;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BusyTrackerService.prototype, "busyList", {
        get: /**
         * @return {?}
         */
        function () {
            return this.busyQueue;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} options
     * @return {?}
     */
    BusyTrackerService.prototype.load = /**
     * @param {?} options
     * @return {?}
     */
    function (options) {
        this.loadBusyQueue(options.busyList);
        this.startLoading(options);
    };
    /**
     * @return {?}
     */
    BusyTrackerService.prototype.updateActiveStatus = /**
     * @return {?}
     */
    function () {
        this.isActive = this.isBusiesProcessing &&
            !this.isDelayProcessing &&
            (this.isDurationProcessing || this.busyQueue.length > 0);
    };
    /**
     * @param {?} options
     * @return {?}
     */
    BusyTrackerService.prototype.startLoading = /**
     * @param {?} options
     * @return {?}
     */
    function (options) {
        var _this = this;
        if (!this.isBusiesProcessing && this.busyList.length > 0) {
            this.isBusiesProcessing = true;
            this.isDelayProcessing = true;
            this.updateActiveStatus();
            timer(options.delay).subscribe(function () {
                _this.isDelayProcessing = false;
                _this.isDurationProcessing = true;
                _this.updateActiveStatus();
                timer(options.minDuration).subscribe(function () {
                    _this.isDurationProcessing = false;
                    _this.updateActiveStatus();
                });
            });
        }
    };
    /**
     * @param {?} busies
     * @return {?}
     */
    BusyTrackerService.prototype.loadBusyQueue = /**
     * @param {?} busies
     * @return {?}
     */
    function (busies) {
        var _this = this;
        busies.filter(function (busy) {
            return busy && !busy.hasOwnProperty('__loaded_mark_by_ng_busy');
        }).forEach(function (busy) {
            Object.defineProperty(busy, '__loaded_mark_by_ng_busy', {
                value: true, configurable: false, enumerable: false, writable: false
            });
            /** @type {?} */
            var cur_busy;
            if (isPromise(busy)) {
                cur_busy = from(busy).subscribe();
            }
            else {
                cur_busy = busy;
            }
            _this.appendToQueue(cur_busy);
        });
    };
    /**
     * @param {?} busy
     * @return {?}
     */
    BusyTrackerService.prototype.appendToQueue = /**
     * @param {?} busy
     * @return {?}
     */
    function (busy) {
        var _this = this;
        this.busyQueue.push(busy);
        busy.add(function () {
            _this.busyQueue = _this.busyQueue.filter(function (cur) { return !cur.closed; });
            _this.updateActiveStatus();
        });
    };
    /**
     * @return {?}
     */
    BusyTrackerService.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
    };
    BusyTrackerService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] },
    ];
    /** @nocollapse */
    BusyTrackerService.ctorParameters = function () { return []; };
    /** @nocollapse */ BusyTrackerService.ngInjectableDef = i0.defineInjectable({ factory: function BusyTrackerService_Factory() { return new BusyTrackerService(); }, token: BusyTrackerService, providedIn: "root" });
    return BusyTrackerService;
}());
export { BusyTrackerService };
if (false) {
    /** @type {?} */
    BusyTrackerService.prototype.isDelayProcessing;
    /** @type {?} */
    BusyTrackerService.prototype.isDurationProcessing;
    /** @type {?} */
    BusyTrackerService.prototype.isBusiesProcessing;
    /** @type {?} */
    BusyTrackerService.prototype.busyQueue;
    /** @type {?} */
    BusyTrackerService.prototype.__isActive;
    /** @type {?} */
    BusyTrackerService.prototype.onStartBusy;
    /** @type {?} */
    BusyTrackerService.prototype.onStopBusy;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVzeS10cmFja2VyLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZy1idXN5LyIsInNvdXJjZXMiOlsibGliL3NlcnZpY2UvYnVzeS10cmFja2VyLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBQyxZQUFZLEVBQUUsVUFBVSxFQUFZLE1BQU0sZUFBZSxDQUFDO0FBQ2xFLE9BQU8sRUFBZSxJQUFJLEVBQUUsS0FBSyxFQUFDLE1BQU0sTUFBTSxDQUFDO0FBQy9DLE9BQU8sRUFBQyxTQUFTLEVBQUMsTUFBTSxtQkFBbUIsQ0FBQzs7Ozs7Ozs7Ozs7OztJQXdDMUM7aUNBM0I0QixLQUFLO29DQUNGLEtBQUs7a0NBQ1AsS0FBSzt5QkFDTyxFQUFFOzBCQUN0QixLQUFLOzJCQUVPLElBQUksWUFBWSxFQUFFOzBCQUNuQixJQUFJLFlBQVksRUFBRTtLQW9CbEM7SUFsQmhCLHNCQUFJLHdDQUFROzs7O1FBQVo7WUFDRSxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUM7U0FDeEI7Ozs7O1FBRUQsVUFBYSxHQUFZO1lBQ3ZCLElBQUksSUFBSSxDQUFDLFVBQVUsS0FBSyxLQUFLLElBQUksR0FBRyxLQUFLLElBQUksSUFBSSxJQUFJLENBQUMsV0FBVyxFQUFFO2dCQUNqRSxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksRUFBRSxDQUFDO2FBQ3pCO1lBQ0QsSUFBSSxJQUFJLENBQUMsVUFBVSxLQUFLLElBQUksSUFBSSxHQUFHLEtBQUssS0FBSyxJQUFJLElBQUksQ0FBQyxVQUFVLEVBQUU7Z0JBQ2hFLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxLQUFLLENBQUM7Z0JBQ2hDLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxFQUFFLENBQUM7YUFDeEI7WUFDRCxJQUFJLENBQUMsVUFBVSxHQUFHLEdBQUcsQ0FBQztTQUN2Qjs7O09BWEE7SUFZRCxzQkFBSSx3Q0FBUTs7OztRQUFaO1lBQ0UsT0FBTyxJQUFJLENBQUMsU0FBUyxD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ZWN0YWJsZSwgT25EZXN0cm95fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7U3Vic2NyaXB0aW9uLCBmcm9tLCB0aW1lcn0gZnJvbSAncnhqcyc7XG5pbXBvcnQge2lzUHJvbWlzZX0gZnJvbSAnLi4vdXRpbC9pc1Byb21pc2UnO1xuXG5leHBvcnQgaW50ZXJmYWNlIFRyYWNrZXJPcHRpb25zIHtcbiAgbWluRHVyYXRpb246IG51bWJlcjtcbiAgZGVsYXk6IG51bWJlcjtcbiAgYnVzeUxpc3Q6IEFycmF5PFByb21pc2U8YW55PiB8IFN1YnNjcmlwdGlvbj47XG59XG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuZXhwb3J0IGNsYXNzIEJ1c3lUcmFja2VyU2VydmljZSBpbXBsZW1lbnRzIE9uRGVzdHJveSB7XG5cbiAgcHJpdmF0ZSBpc0RlbGF5UHJvY2Vzc2luZyA9IGZhbHNlO1xuICBwcml2YXRlIGlzRHVyYXRpb25Qcm9jZXNzaW5nID0gZmFsc2U7XG4gIHByaXZhdGUgaXNCdXNpZXNQcm9jZXNzaW5nID0gZmFsc2U7XG4gIHByaXZhdGUgYnVzeVF1ZXVlOiBBcnJheTxTdWJzY3JpcHRpb24+ID0gW107XG4gIHByaXZhdGUgX19pc0FjdGl2ZSA9IGZhbHNlO1xuXG4gIG9uU3RhcnRCdXN5OiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgb25TdG9wQnVzeTogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgZ2V0IGlzQWN0aXZlKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLl9faXNBY3RpdmU7XG4gIH1cblxuICBzZXQgaXNBY3RpdmUodmFsOiBib29sZWFuKSB7XG4gICAgaWYgKHRoaXMuX19pc0FjdGl2ZSA9PT0gZmFsc2UgJiYgdmFsID09PSB0cnVlICYmIHRoaXMub25TdGFydEJ1c3kpIHtcbiAgICAgIHRoaXMub25TdGFydEJ1c3kuZW1pdCgpO1xuICAgIH1cbiAgICBpZiAodGhpcy5fX2lzQWN0aXZlID09PSB0cnVlICYmIHZhbCA9PT0gZmFsc2UgJiYgdGhpcy5vblN0b3BCdXN5KSB7XG4gICAgICB0aGlzLmlzQnVzaWVzUHJvY2Vzc2luZyA9IGZhbHNlO1xuICAgICAgdGhpcy5vblN0b3BCdXN5LmVtaXQoKTtcbiAgICB9XG4gICAgdGhpcy5fX2lzQWN0aXZlID0gdmFsO1xuICB9XG4gIGdldCBidXN5TGlzdCgpIHtcbiAgICByZXR1cm4gdGhpcy5idXN5UXVldWU7XG4gIH1cblxuICBjb25zdHJ1Y3RvcigpIHt9XG5cbiAgbG9hZChvcHRpb25zOiBUcmFja2VyT3B0aW9ucykge1xuICAgIHRoaXMubG9hZEJ1c3lRdWV1ZShvcHRpb25zLmJ1c3lMaXN0KTtcbiAgICB0aGlzLnN0YXJ0TG9hZGluZyhvcHRpb25zKTtcbiAgfVxuXG4gIHByaXZhdGUgdXBkYXRlQWN0aXZlU3RhdHVzKCkge1xuICAgIHRoaXMuaXNBY3RpdmUgPSB0aGlzLmlzQnVzaWVzUHJvY2Vzc2luZyAmJlxuICAgICAgIXRoaXMuaXNEZWxheVByb2Nlc3NpbmcgJiZcbiAgICAgICh0aGlzLmlzRHVyYXRpb25Qcm9jZXNzaW5nIHx8IHRoaXMuYnVzeVF1ZXVlLmxlbmd0aCA+IDApO1xuICB9XG5cbiAgcHJpdmF0ZSBzdGFydExvYWRpbmcob3B0aW9uczogVHJhY2tlck9wdGlvbnMpIHtcbiAgICBpZiAoIXRoaXMuaXNCdXNpZXNQcm9jZXNzaW5nICYmIHRoaXMuYnVzeUxpc3QubGVuZ3RoID4gMCkge1xuICAgICAgdGhpcy5pc0J1c2llc1Byb2Nlc3NpbmcgPSB0cnVlO1xuICAgICAgdGhpcy5pc0RlbGF5UHJvY2Vzc2luZyA9IHRydWU7XG4gICAgICB0aGlzLnVwZGF0ZUFjdGl2ZVN0YXR1cygpO1xuICAgICAgdGltZXIob3B0aW9ucy5kZWxheSkuc3Vic2NyaWJlKCgpID0+IHtcbiAgICAgICAgdGhpcy5pc0RlbGF5UHJvY2Vzc2luZyA9IGZhbHNlO1xuICAgICAgICB0aGlzLmlzRHVyYXRpb25Qcm9jZXNzaW5nID0gdHJ1ZTtcbiAgICAgICAgdGhpcy51cGRhdGVBY3RpdmVTdGF0dXMoKTtcbiAgICAgICAgdGltZXIob3B0aW9ucy5taW5EdXJhdGlvbikuc3Vic2NyaWJlKCgpID0+IHtcbiAgICAgICAgICB0aGlzLmlzRHVyYXRpb25Qcm9jZXNzaW5nID0gZmFsc2U7XG4gICAgICAgICAgdGhpcy51cGRhdGVBY3RpdmVTdGF0dXMoKTtcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIGxvYWRCdXN5UXVldWUoYnVzaWVzOiBBcnJheTxQcm9taXNlPGFueT4gfCBTdWJzY3JpcHRpb24+KSB7XG4gICAgYnVzaWVzLmZpbHRlcigoYnVzeSkgPT4ge1xuICAgICAgcmV0dXJuIGJ1c3kgJiYgIWJ1c3kuaGFzT3duUHJvcGVydHkoJ19fbG9hZGVkX21hcmtfYnlfbmdfYnVzeScpO1xuICAgIH0pLmZvckVhY2goKGJ1c3k6IFByb21pc2U8YW55PiB8IFN1YnNjcmlwdGlvbikgPT4ge1xuICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGJ1c3ksICdfX2xvYWRlZF9tYXJrX2J5X25nX2J1c3knLCB7XG4gICAgICAgIHZhbHVlOiB0cnVlLCBjb25maWd1cmFibGU6IGZhbHNlLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IGZhbHNlXG4gICAgICB9KTtcbiAgICAgIGxldCBjdXJfYnVzeTtcbiAgICAgIGlmIChpc1Byb21pc2UoYnVzeSkpIHtcbiAgICAgICAgY3VyX2J1c3kgPSBmcm9tKGJ1c3kpLnN1YnNjcmliZSgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY3VyX2J1c3kgPSBidXN5O1xuICAgICAgfVxuICAgICAgdGhpcy5hcHBlbmRUb1F1ZXVlKGN1cl9idXN5KTtcbiAgICB9KTtcbiAgfVxuXG4gIHByaXZhdGUgYXBwZW5kVG9RdWV1ZShidXN5OiBTdWJzY3JpcHRpb24pIHtcbiAgICB0aGlzLmJ1c3lRdWV1ZS5wdXNoKGJ1c3kpO1xuICAgIGJ1c3kuYWRkKCgpID0+IHtcbiAgICAgIHRoaXMuYnVzeVF1ZXVlID0gdGhpcy5idXN5UXVldWUuZmlsdGVyKChjdXI6IFN1YnNjcmlwdGlvbikgPT4gIWN1ci5jbG9zZWQpO1xuICAgICAgdGhpcy51cGRhdGVBY3RpdmVTdGF0dXMoKTtcbiAgICB9KTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCk6IHZvaWQge1xuICB9XG59XG4iXX0=